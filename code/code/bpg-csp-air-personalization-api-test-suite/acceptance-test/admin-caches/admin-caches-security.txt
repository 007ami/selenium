*** Settings ***
Suite Setup       Initialize Test Environment For Admin API
Force Tags        security    regression
Resource          ../../resources/imports.txt
Resource          resources/admin-caches.txt
Resource          ../resources/common.txt

*** Test Cases ***
SEC_001 Verify That Error Handling Works When Invalid Token Is Used
    Generate Test Variables For Post Clear Caches    token=${invalid_token_1}
    Send POST Request
    Verify That Response Status Code Is Correct    401
    Verify That Error Response Is Returned    401    Unauthorized Access

SEC_002 Verify That Error Handling Works When Expired Token Is Used
    [Tags]    not-ready
    Generate Test Variables For Post Clear Caches    token=${expired_token}
    Send POST Request
    Verify That Response Status Code Is Correct    401
    Verify That Error Response Is Returned    401    Unauthorized Access

SEC_003 Verify That Error Handling Works When Blank Token Is Used
    Generate Test Variables For Post Clear Caches    token=${EMPTY}
    Send POST Request
    Verify That Response Status Code Is Correct    401
    Verify That Error Response Is Returned    401    Unauthorized Access

SEC_004 Verify That Error Handling Works When Null Token Is Used
    Generate Test Variables For Post Clear Caches    token=null
    Send POST Request
    Verify That Response Status Code Is Correct    401
    Verify That Error Response Is Returned    401    Unauthorized Access

SEC_005 Verify That Error Handling Works When No Token Is Used
    Generate Test Variables For Post Clear Caches    token=None
    Send POST Request
    Verify That Response Status Code Is Correct    401
    Verify That Error Response Is Returned    401    Unauthorized Access

SEC_006 Verify That SUPER_ADMIN Roles Are Given Access
    #SUPER_ADMIN
    Send Authenticate Post Request And Get Token    ${${env}_sadmin_username}    ${${env}_sadmin_password}
    Generate Test Variables For Post Clear Caches
    Send POST Request
    Verify That Response Status Code Is Correct    200
    #ADMIN
    Send Authenticate Post Request And Get Token    ${${env}_gsmadmin_username}    ${${env}_gsmadmin_password}
    Generate Test Variables For Post Clear Caches
    Send POST Request
    Verify That Response Status Code Is Correct    403
    Verify That Error Response Is Returned    403    Access is Denied
    #USER
    Send Authenticate Post Request And Get Token    ${${env}_user_username}    ${${env}_user_password}
    Generate Test Variables For Post Clear Caches
    Send POST Request
    Verify That Response Status Code Is Correct    403
    Verify That Error Response Is Returned    403    Access is Denied
